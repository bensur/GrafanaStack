---
# https://prometheus.io/docs/prometheus/latest/configuration/configuration/
global:
  # How frequently to scrape targets by default.
  scrape_interval: 1m
  # File to which PromQL queries are logged.
  # Reloading the configuration will reopen the file.
  query_log_file: /prometheus/query_log.log

# Rule files specifies a list of globs. Rules and alerts are read from
# all matching files.
rule_files:
  - rules/*.yaml

# A list of scrape configurations.
scrape_configs:
  # A scrape configuration containing exactly one endpoint to scrape:
  # Here it's Prometheus itself.
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    static_configs:
      - targets: ['host.docker.internal:9090']
  - job_name: local_docker_daemon
    static_configs:
    - targets: ['host.docker.internal:9323']
  - job_name: local_dockers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
    relabel_configs:
    - source_labels: ['__meta_docker_container_name']
      regex: '/(.*)'
      target_label: 'container_name'

# Alerting specifies settings related to the Alertmanager.
# alerting:
#   alert_relabel_configs:
#     [ - <relabel_config> ... ]
#   alertmanagers:
#     [ - <alertmanager_config> ... ]

# Settings related to the remote write feature.
# remote_write:
#   [ - <remote_write> ... ]

# Settings related to the remote read feature.
# remote_read:
#   [ - <remote_read> ... ]

# Storage related settings that are runtime reloadable.
# storage:
#   [ exemplars: <exemplars> ]

# Configures exporting traces.
# tracing:
#   [ <tracing_config> ]