---
volumes:
  grafana_data:
  prometheus_data:
  minio_data:

networks:
  loki:
  prometheus:
  grafana:

services:
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    #  - GF_INSTALL_PLUGINS=""
    networks:
      - grafana
      - prometheus
      - loki
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/:/etc/prometheus
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=24h'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - grafana
      - prometheus
      - loki
  loki-read:
    image: grafana/loki:2.6.1
    container_name: loki-read
    command: "-config.file=/etc/loki/config.yaml -target=read"
    ports:
      - 3101:3100
      - 7946
      - 9095
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/config.yaml
    depends_on:
      - minio
    networks: &loki-dns
      loki:
        aliases:
          - loki
      grafana:
  loki-write:
    image: grafana/loki:2.6.1
    container_name: loki-write
    command: "-config.file=/etc/loki/config.yaml -target=write"
    ports:
      - 3102:3100
      - 7946
      - 9095
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/config.yaml
    depends_on:
      - minio
    networks:
      <<: *loki-dns
  loki-gateway:
    image: nginx:latest
    depends_on:
      - loki-read
      - loki-write
    entrypoint:
      - sh
      - -euc
      - /docker-entrypoint.sh nginx -g "daemon off;"
    ports:
      - "3100:3100"
    networks:
      - loki
  minio:
    image: minio/minio
    container_name: minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server /data
    environment:
      - MINIO_ACCESS_KEY=loki
      - MINIO_SECRET_KEY=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - 9000
    volumes:
      - minio_data:/data
    networks:
      - loki
  promtail:
    image: grafana/promtail:2.6.1
    volumes:
      - ./promtail/promtail-config.yaml:/etc/promtail/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki-gateway
    networks:
      - loki